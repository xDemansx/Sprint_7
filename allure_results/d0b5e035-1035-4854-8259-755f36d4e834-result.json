{"name": "Тест создания курьера, если одного из полей нет", "status": "failed", "statusDetails": {"message": "AssertionError: assert (400 == 400 and {'code': 400,...етной записи'} == {'message': '...етной записи'}\n +  where 400 = <Response [400]>.status_code\n  \n  Omitting 1 identical items, use -vv to show\n  Left contains 1 more item:\n  \u001b[0m{\u001b[33m'\u001b[39;49;00m\u001b[33mcode\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m: \u001b[94m400\u001b[39;49;00m}\u001b[90m\u001b[39;49;00m\n  Use -v to get more diff)", "trace": "self = <tests.test_create_courier.TestCreateCourier object at 0x00000252FF300640>, courier_payload = {'firstname': 'Stephanie', 'login': 'Front', 'password': ''}\n\n    @allure.title('Тест создания курьера, если одного из полей нет')\n    @pytest.mark.parametrize('courier_payload', [ # логин и пароль являются обязательными, имя необязательное\n                                       {'login': '', 'password': generate_password(), 'firstname': generate_first_name()},\n                                       {'login': generate_login(), 'password': '', 'firstname': generate_first_name()},\n                                       ])\n    def test_create_courier_without_field_false(self, courier_payload):\n        response = requests.post(URLs.URL_CREATE_COURIER, data = courier_payload) # Создаем курьера\n>       assert (response.status_code == 400 and\n                response.json() == TestData.Message_Courier_Bad_Request) # проверяем, что запрос возвращает правильный код ответа и текст сообщения\nE       AssertionError: assert (400 == 400 and {'code': 400,...етной записи'} == {'message': '...етной записи'}\nE        +  where 400 = <Response [400]>.status_code\nE         \nE         Omitting 1 identical items, use -vv to show\nE         Left contains 1 more item:\nE         \u001b[0m{\u001b[33m'\u001b[39;49;00m\u001b[33mcode\u001b[39;49;00m\u001b[33m'\u001b[39;49;00m: \u001b[94m400\u001b[39;49;00m}\u001b[90m\u001b[39;49;00m\nE         Use -v to get more diff)\n\ntests\\test_create_courier.py:32: AssertionError"}, "parameters": [{"name": "courier_payload", "value": "{'login': 'Front', 'password': '', 'firstname': 'Stephanie'}"}], "start": 1758713611149, "stop": 1758713611614, "uuid": "415cf737-b278-42cd-97d6-bd39dda698d7", "historyId": "866c63bd2a044732dd50133c76cd1709", "testCaseId": "46b21a142e455c32f19a1a0cc421cc17", "fullName": "tests.test_create_courier.TestCreateCourier#test_create_courier_without_field_false", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_courier"}, {"name": "subSuite", "value": "TestCreateCourier"}, {"name": "host", "value": "DeMaNs"}, {"name": "thread", "value": "49836-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_courier"}], "titlePath": ["tests", "test_create_courier.py", "TestCreateCourier"]}